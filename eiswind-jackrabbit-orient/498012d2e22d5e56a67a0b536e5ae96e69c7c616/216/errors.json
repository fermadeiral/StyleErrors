[
    {
        "line": "41",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'setUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'setUp' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "47",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'tearDown' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'tearDown' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "52",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testStringLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testStringLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "58",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testStringLiteralInvalidName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testStringLiteralInvalidName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "62",
        "severity": "error",
        "message": "Line is longer than 120 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "67",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "76",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testBinaryLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testBinaryLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testDateLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testDateLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "101",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testDoubleLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testDoubleLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "110",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "119",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testDecimalLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testDecimalLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "120",
        "column": "55",
        "severity": "error",
        "message": "'283' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "128",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "137",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testLongLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testLongLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "138",
        "column": "40",
        "severity": "error",
        "message": "'283' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "146",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "155",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testBooleanLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testBooleanLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "164",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "173",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testNameLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testNameLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "179",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testPathLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testPathLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "192",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "208",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "217",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testReferenceLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testReferenceLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "229",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "238",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testWeakReferenceLiteral' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testWeakReferenceLiteral' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "250",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "268",
        "column": "41",
        "severity": "error",
        "message": "Expected @throws tag for 'RepositoryException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "281",
        "column": "72",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "290",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testEqualTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testEqualTo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "294",
        "column": "5",
        "severity": "error",
        "message": "Class 'NodeNameTest' looks like designed for extension (can be subclassed), but the method 'testNotEqualTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NodeNameTest' final or making the method 'testNotEqualTo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "300",
        "column": "32",
        "severity": "error",
        "message": "Parameter operator should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "301",
        "column": "32",
        "severity": "error",
        "message": "Parameter matchesLesser should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "302",
        "column": "32",
        "severity": "error",
        "message": "Parameter matchesEqual should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "303",
        "column": "32",
        "severity": "error",
        "message": "Parameter matchesGreater should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "310",
        "column": "45",
        "severity": "error",
        "message": "Parameter literal should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "311",
        "column": "45",
        "severity": "error",
        "message": "Parameter operator should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "312",
        "column": "45",
        "severity": "error",
        "message": "Parameter matches should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "316",
        "column": "31",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "319",
        "column": "51",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "325",
        "column": "50",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "331",
        "column": "42",
        "severity": "error",
        "message": "Parameter operator should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "331",
        "column": "59",
        "severity": "error",
        "message": "Parameter literal should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    }
]