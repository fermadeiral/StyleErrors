/*
 * Influx API Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.influxdb.client.domain;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.influxdb.client.domain.LogViewerColumnSettings;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Contains a specific column&#39;s settings.
 */
@ApiModel(description = "Contains a specific column's settings.")

public class LogViewerColumn {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_SETTINGS = "settings";
  @SerializedName(SERIALIZED_NAME_SETTINGS)
  private List<LogViewerColumnSettings> settings = new ArrayList<>();

  public LogViewerColumn name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Unique identifier name of the column
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Unique identifier name of the column")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LogViewerColumn position(Integer position) {
    this.position = position;
    return this;
  }

   /**
   * Get position
   * @return position
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }

  public LogViewerColumn settings(List<LogViewerColumnSettings> settings) {
    this.settings = settings;
    return this;
  }

  public LogViewerColumn addSettingsItem(LogViewerColumnSettings settingsItem) {
    this.settings.add(settingsItem);
    return this;
  }

   /**
   * Composable settings options for the column
   * @return settings
  **/
  @ApiModelProperty(required = true, value = "Composable settings options for the column")
  public List<LogViewerColumnSettings> getSettings() {
    return settings;
  }

  public void setSettings(List<LogViewerColumnSettings> settings) {
    this.settings = settings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogViewerColumn logViewerColumn = (LogViewerColumn) o;
    return Objects.equals(this.name, logViewerColumn.name) &&
        Objects.equals(this.position, logViewerColumn.position) &&
        Objects.equals(this.settings, logViewerColumn.settings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, position, settings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogViewerColumn {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

