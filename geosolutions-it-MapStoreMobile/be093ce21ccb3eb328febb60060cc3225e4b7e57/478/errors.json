[
    {
        "line": "2",
        "severity": "warning",
        "message": "Line does not match expected header line of ' * Copyright 2010, 2011, 2012 mapsforge.org'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.header.HeaderCheck"
    },
    {
        "line": "35",
        "severity": "warning",
        "message": "Using the '.*' form of import should be avoided - com.vividsolutions.jts.geom.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "36",
        "severity": "warning",
        "message": "Using the '.*' form of import should be avoided - com.vividsolutions.jts.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "37",
        "column": "1",
        "severity": "warning",
        "message": "Redundant import from the same package - com.vividsolutions.jts.io.ParseException.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.RedundantImportCheck"
    },
    {
        "line": "108",
        "column": "21",
        "severity": "warning",
        "message": "Unclosed HTML tag found: <i>Coordinate <b>)</b>",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck"
    },
    {
        "line": "131",
        "column": "1",
        "severity": "warning",
        "message": "'{' at column 1 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "135",
        "column": "41",
        "severity": "warning",
        "message": "The String \")\" appears 2 times in the file.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck"
    },
    {
        "line": "175",
        "column": "5",
        "severity": "warning",
        "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "206",
        "column": "5",
        "severity": "warning",
        "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "255",
        "column": "3",
        "severity": "warning",
        "message": "'{' at column 3 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "289",
        "column": "7",
        "severity": "warning",
        "message": "'{' at column 7 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "289",
        "column": "7",
        "severity": "warning",
        "message": "Avoid nested blocks.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck"
    },
    {
        "line": "296",
        "column": "17",
        "severity": "warning",
        "message": "'}' at column 10 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "321",
        "column": "32",
        "severity": "warning",
        "message": "The String \" or \" appears 2 times in the file.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck"
    },
    {
        "line": "413",
        "column": "3",
        "severity": "warning",
        "message": "'{' at column 3 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "426",
        "column": "3",
        "severity": "warning",
        "message": "'{' at column 3 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "430",
        "severity": "warning",
        "message": "First sentence should end with a period.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck"
    },
    {
        "line": "436",
        "column": "3",
        "severity": "warning",
        "message": "'{' at column 3 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "443",
        "column": "44",
        "severity": "warning",
        "message": "The String \"'\" appears 4 times in the file.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MultipleStringLiteralsCheck"
    },
    {
        "line": "463",
        "column": "5",
        "severity": "warning",
        "message": "'try' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "463",
        "column": "8",
        "severity": "warning",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "465",
        "column": "5",
        "severity": "warning",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "465",
        "column": "6",
        "severity": "warning",
        "message": "'catch' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "465",
        "column": "6",
        "severity": "warning",
        "message": "'catch' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "465",
        "column": "26",
        "severity": "warning",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "467",
        "column": "5",
        "severity": "warning",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "467",
        "column": "6",
        "severity": "warning",
        "message": "'catch' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "467",
        "column": "6",
        "severity": "warning",
        "message": "'catch' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "467",
        "column": "29",
        "severity": "warning",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "471",
        "column": "30",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "474",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "477",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "480",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "483",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "486",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "489",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "492",
        "column": "35",
        "severity": "warning",
        "message": "String literal expressions should be on the left side of an equalsIgnoreCase comparison.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EqualsAvoidNullCheck"
    },
    {
        "line": "513",
        "column": "53",
        "severity": "warning",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "548",
        "column": "3",
        "severity": "warning",
        "message": "'{' at column 3 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "571",
        "column": "3",
        "severity": "warning",
        "message": "'{' at column 3 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    }
]